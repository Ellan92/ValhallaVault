{
	"info": {
		"_postman_id": "9c9a2d5a-b237-43a7-8271-63cc3f59c468",
		"name": "Subcategory",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33871234"
	},
	"item": [
		{
			"name": "GetAllSub",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test successfully done. Retrieved Data\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//förväntar oss att få en  array\r",
							"pm.test(\"This is an array\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an('array')\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:7214/api/Subcategory",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7214",
					"path": [
						"api",
						"Subcategory"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update subcategory name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status test successfully done. Retrieved Data\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"/*\r",
							"pm.test(\"Verify Successful Update\", function () {\r",
							"    var jsonData = pm.response.json(); // Parse response body as JSON\r",
							"    pm.expect(jsonData.newSubcategoryText).to.eql(\"Updated Subcategory\"); // kollar om namnet är uppdaterad\r",
							"});\r",
							"*/\r",
							"\r",
							"//lyckats med params men inte härr"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"subCategoryName\" : \"Updated subcategory name\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7214/api/Subcategory",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7214",
					"path": [
						"api",
						"Subcategory"
					],
					"query": [
						{
							"key": "subcategoryId",
							"value": "11",
							"disabled": true
						},
						{
							"key": "newSubcategoryText",
							"value": "Updated Subcategory",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetSubcategory11",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test successfully done. Retrieved Data\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"Id 11 name updated\", function () {\r",
							"    var jsonData = pm.response.json(); // Parse response body as JSON\r",
							"    pm.expect(jsonData.subCategoryName).to.eql(\"Updated TestName\"); // kollar om namnet är uppdaterad\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:7214/api/Subcategory/11",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7214",
					"path": [
						"api",
						"Subcategory",
						"11"
					]
				}
			},
			"response": []
		},
		{
			"name": "GETbyID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test successfully done. Retrieved Data by ID\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Test som undersöker om de properties finns\r",
							"pm.test(\"Response body contains subcategory properties\", function () {\r",
							"    // omvandla body till JSON\r",
							"    var jsonData = pm.response.json();\r",
							"    // Check if the response body contains the expected user details\r",
							"    pm.expect(jsonData).to.have.property('id'); // Check if 'id' property exists\r",
							"    pm.expect(jsonData).to.have.property('subCategoryName'); // Check if 'categoryName' property exists \r",
							"    pm.expect(jsonData).to.have.property('description');\r",
							"    pm.expect(jsonData).to.have.property('segmentId');\r",
							"    pm.expect(jsonData).to.have.property('segment');\r",
							"    pm.expect(jsonData).to.have.property('questions');\r",
							"\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:7214/api/Subcategory/11\n",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7214",
					"path": [
						"api",
						"Subcategory",
						"11\n"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"//lyckats att ta bort subcategory med ID 10\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"//Kolla om det finns data\r",
							"pm.test(\"Data with ID 10 is empty\", function () {\r",
							"    pm.expect(pm.response.text()).to.be.empty;\r",
							"});\r",
							"\r",
							"//GET hämtar datan\r",
							"//resource = subcategory\r",
							"// :id = 10\r",
							"\r",
							"pm.test(\"Dataa is deleted\", function () {\r",
							"    pm.sendRequest('GET', '/api/resource/:id', function (err, response) {\r",
							"        pm.expect(response.code).to.eql(404);\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7214/api/Subcategory/10",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7214",
					"path": [
						"api",
						"Subcategory",
						"10"
					]
				}
			},
			"response": []
		}
	]
}