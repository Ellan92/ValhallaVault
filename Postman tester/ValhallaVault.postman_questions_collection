{
	"info": {
		"_postman_id": "d21c13f2-9405-43a5-b677-231790b430a1",
		"name": "ValhallaVault",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33865500"
	},
	"item": [
		{
			"name": "QuestionController",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test för att hämta alla frågor\r",
							"pm.test(\"Get all questions\", function () {\r",
							"    pm.sendRequest({\r",
							"        url: \"https://localhost:7214/api/Question\",\r",
							"        method: 'GET',\r",
							"    }, function (err, response) {\r",
							"        pm.expect(err).to.be.null;\r",
							"        pm.response.to.have.status(200);\r",
							"        pm.expect(response.json()).to.be.an('array');\r",
							"    });\r",
							"});\r",
							"\r",
							"// Test för att hämta en fråga med specifikt ID\r",
							"pm.test(\"Get question by ID\", function () {\r",
							"    pm.sendRequest({\r",
							"        url: \"https://localhost:7214/api/Question/1\", // Anpassa ID här\r",
							"        method: 'GET',\r",
							"    }, function (err, response) {\r",
							"        pm.expect(err).to.be.null;\r",
							"        pm.response.to.have.status(200);\r",
							"        pm.expect(response.json()).to.have.property('id', 1); // Anpassa förväntat ID här\r",
							"    });\r",
							"});\r",
							"\r",
							"// Test för att lägga till en ny fråga\r",
							"pm.test(\"Add a new question\", function () {\r",
							"    pm.sendRequest({\r",
							"        url: \"https://localhost:7214/api/Question\",\r",
							"        method: 'POST',\r",
							"        header: {\r",
							"            'Content-Type': 'application/json'\r",
							"        },\r",
							"        body: {\r",
							"            mode: 'raw',\r",
							"            raw: JSON.stringify({\r",
							"                // Fyll i nödvändiga fält för den nya frågan här\r",
							"            })\r",
							"        }\r",
							"    }, function (err, response) {\r",
							"        pm.expect(err).to.be.null;\r",
							"        pm.response.to.have.status(200);\r",
							"    });\r",
							"});\r",
							"\r",
							"// Test för att uppdatera en befintlig fråga\r",
							"pm.test(\"Update a question\", function () {\r",
							"    pm.sendRequest({\r",
							"        url: \"https://localhost:7214/api/Question\",\r",
							"        method: 'PUT',\r",
							"        header: {\r",
							"            'Content-Type': 'application/json'\r",
							"        },\r",
							"        body: {\r",
							"            mode: 'raw',\r",
							"            raw: JSON.stringify({\r",
							"                questionId: 1, // Anpassa ID här\r",
							"                newQuestionText: \"Updated question text\" // Anpassa ny frågetext här\r",
							"            })\r",
							"        }\r",
							"    }, function (err, response) {\r",
							"        pm.expect(err).to.be.null;\r",
							"        pm.response.to.have.status(200);\r",
							"    });\r",
							"});\r",
							"\r",
							"// Test för att ta bort en fråga\r",
							"pm.test(\"Delete a question\", function () {\r",
							"    pm.sendRequest({\r",
							"        url: \"https://localhost:7214/api/Question/1\", // Anpassa ID här\r",
							"        method: 'DELETE',\r",
							"    }, function (err, response) {\r",
							"        pm.expect(err).to.be.null;\r",
							"        pm.response.to.have.status(200);\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseAdress}}/Question",
					"host": [
						"{{BaseAdress}}"
					],
					"path": [
						"Question"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "BaseAdress",
			"value": "https://localhost:7214/api"
		}
	]
}