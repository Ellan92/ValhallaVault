@page "/Homepage"
@using ValhallaVault.Data
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@inject AuthenticationStateProvider AuthenticationProvider
@inject SignInManager<ApplicationUser> SignInManager

@attribute [Authorize]
<PageTitle>UserPage</PageTitle>

<h3>Din profil:</h3>
<h4>Välkommen, @Name</h4>

<div class="row-cols-4">
    <div> 
       <input placeholder="Search Category" @bind="searchText" @bind:event="oninput" />
    </div>
</div>
<br />
<ul>
    <div>
        <a href="@($"CategoryPage/{1}")"><h5 class="Category1">Kategori 1: Att skydda sig mot bedrägerier</h5></a>
        <div class="progress" role="progressbar" aria-label="Success example" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">
            <div class="progress-bar bg-success" style="width: 25%">25%</div>
        </div>
    </div>
    <br />
    <div>
        <a href="@($"CategoryPage/{2}")"><h5 class="Category1">Kategori 2: Cybersäkerhet för företag</h5></a>
        <div class="progress" role="progressbar" aria-label="Success example" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">
            <div class="progress-bar bg-success" style="width: 25%">25%</div>
        </div>
    </div>
    <br />
    <div>
        <a href="@($"CategoryPage/{3}")"><h5 class="Category1">Kategori 3: Cyberspionage</h5></a>
        <div class="progress" role="progressbar" aria-label="Success example" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">
            <div class="progress-bar bg-success" style="width: 25%">25%</div>
        </div>
    </div>
    <br />
</ul>



@code {
    public string? Name { get; set; }
    private ApplicationUser? signedIn; // representerar den inloggade användaren 
    private AuthenticationState? State; // representerar autentiseringsstatusen för användaren 
    private string searchText = "";

    protected async override Task OnInitializedAsync()
    {
        // Hämta användarens AuthenticationState 
        State = await AuthenticationProvider.GetAuthenticationStateAsync();
        var user = State.User;
        Name = user.Identity.Name;

       
     
    }
    
}
